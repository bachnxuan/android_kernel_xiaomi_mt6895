name: Build GKI - Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
        with:
          submodules: "true"
          fetch-depth: 1
      - name: Setup build environment
        run: |
          # Install require dependencies
          sudo apt update -y
          sudo apt install bc binutils-dev bison build-essential ccache curl flex git libelf-dev lld make python3-dev zlib1g-dev cpio python-is-python3 tar perl wget lz4 unzip -y
          git clone https://github.com/bachnxuan/AnyKernel3.git AnyKernel3
          cd AnyKernel3 && rm -rf .git .github && cd ..
          # Auto update KernelSU submodule
          git submodule update --init --recursive
          cd KernelSU
          git fetch --unshallow
          git checkout main
          git pull
          # Get current time
          echo "TIME=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - name: Free disk space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 3G
      - name: Setup clang
        working-directory: ./..
        run: |
          git clone --depth 1 https://github.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r416183b clang-tc
      - name: Configure Kernel
        run: |
          # Add SUSFS configuration settings
          echo "CONFIG_KSU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=n" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./arch/arm64/configs/gki_defconfig
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./arch/arm64/configs/gki_defconfig
      - name: Build
        run: |
          bash build.sh
      - name: Making ak3 zip
        run: |
          mv ./out/arch/arm64/boot/Image.gz $GITHUB_WORKSPACE
          cd AnyKernel3
          ZIP_NAME="5.10.233-xaga-${{ env.TIME }}-AnyKernel3.zip"
          echo "Creating zip file: $ZIP_NAME..."
          mv ../Image.gz ./Image.gz
          zip -r "../$ZIP_NAME" ./*
          rm ./Image.gz
      - name: Upload Kernel Image Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: AnyKernel3
          path: ./5.10.233-xaga-${{ env.TIME }}-AnyKernel3.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Environment
        run: |
          echo "TIME=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - name: Download Kernel Image Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: AnyKernel3
          path: ./release-artifact
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.TIME }}"
          release_name: "KernelSU With SUSFS: ${{ env.TIME }}"
          draft: false
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./release-artifact/5.10.233-xaga-${{ env.TIME }}-AnyKernel3.zip"
          asset_name: "5.10.233-xaga-${{ env.TIME }}-AnyKernel3.zip"
          asset_content_type: application/zip
